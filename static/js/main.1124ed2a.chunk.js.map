{"version":3,"sources":["components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","Services/pixabay.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App/App.js","index.js"],"names":["module","exports","Searchbar","state","value","handleChange","e","setState","currentTarget","toLowerCase","handleSubmit","preventDefault","trim","alert","text","props","onSubmit","className","this","type","name","autoComplete","autoFocus","placeholder","onChange","React","Component","ImageGalleryItem","imgS","imgL","onClick","src","alt","ImageGallery","images","map","id","webformatURL","largeImageURL","pixabayFetch","query","page","url","axios","get","then","data","hits","Button","Modal","img","propType","PropTypes","string","func","Loading","color","height","width","styles","loader","App","isLoading","modalIsOpen","bigImg","formSubmitHandle","fetchImages","options","prevState","catch","error","delay","finally","imgBig","console","log","modalClose","target","prevProps","window","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1124ed2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__jqv4Q\"};","import React from \"react\";\r\nimport { alert} from '@pnotify/core';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport PropTypes from 'prop-types';\r\nexport class Searchbar extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ value: e.currentTarget.value.toLowerCase() });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.value.trim() === \"\") {\r\n      return alert({\r\n  text: 'Please, enter your query!'\r\n});\r\n    }\r\n    this.props.onSubmit(this.state.value);\r\n   this.setState({\r\n      value: \"\",\r\n    });\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.value}\r\n            name=\"value\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func  \r\n}","import PropTypes from 'prop-types';\r\n\r\nexport const ImageGalleryItem = ({ imgS, imgL, onClick }) => {\r\n    return (\r\n <li className=\"ImageGalleryItem\" >\r\n  <img src={imgS} alt=\"\" onClick = {() => onClick(imgL)} className=\"ImageGalleryItem-image\" />\r\n</li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    imgS: PropTypes.string,\r\n    imgL: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}","import { func } from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ImageGallery = ({ images, onClick}) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, largeImageURL }) => {\r\n        return <ImageGalleryItem key={id} imgL = {largeImageURL} imgS={webformatURL} onClick={onClick} />\r\n      })}\r\n      \r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n}","import axios from \"axios\";\r\n\r\nconst API_KEY = \"23114127-913a50287ab6c0ea340feb686\";\r\nconst BASE_URL = \"https://pixabay.com/api/\"\r\n\r\nexport const pixabayFetch = ({ query, page }) => {\r\n \r\n const url = `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n\r\n  return axios\r\n    .get(url)\r\n    .then(({ data }) => data.hits)\r\n};\r\n","export const Button = ({text, onClick}) => {\r\n    return (\r\n        <button className = \"Button\" onClick = {onClick}>{ text}</button>\r\n    )\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport const Modal = ({ img, onClick }) => {\r\n    return (\r\n        <div className=\"Overlay\" onClick = {onClick}>\r\n  <div className=\"Modal\">\r\n    <img src={img} alt=\"\" />\r\n  </div>\r\n</div>\r\n    )\r\n}\r\n\r\nModal.propType = {\r\n  img: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport React from \"react\";\r\nimport styles from './Loader.module.css'\r\nexport default class Loading extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} className={ styles.loader} /> \r\n    );\r\n  }\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Searchbar } from \"../components/Searchbar/Searchbar\";\nimport { ImageGallery } from \"../components/ImageGallery/ImageGallery\";\nimport { pixabayFetch } from \"../Services/pixabay\";\nimport { Button } from \"../components/Button/Button\";\nimport { Modal } from \"../components/Modal/Modal\";\nimport { alert, error } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"../components/Loader/Loader\";\n\nclass App extends React.Component {\n  state = {\n    value: \"\",\n    page: 1,\n    images: [],\n    isLoading: false,\n    modalIsOpen: false,\n    bigImg: \"\",\n  };\n  formSubmitHandle = (value) => {\n    this.setState({ value });\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.value !== this.state.value) {\n      this.fetchImages();\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }\n\n  fetchImages = () => {\n    const options = {\n      query: this.state.value,\n      page: this.state.page,\n    };\n\n    this.setState({ isLoading: true });\n\n    pixabayFetch(options)\n      .then((images) => {\n        this.setState((prevState) => {\n          return {\n            images: [...prevState.images, ...images],\n            page: prevState.page + 1,\n          };\n        });\n      })\n      .catch((error) =>\n        error({\n          text: \"No image!\",\n          delay: 1000,\n        })\n      )\n      .finally(() => this.setState({ isLoading: false }));\n  };\n  imgBig = (img) => {\n    this.setState({ modalIsOpen: true });\n    this.setState({ bigImg: img });\n    console.log(this.state.bigImg);\n  };\n  modalClose = (e) => {\n    if (e.currentTarget === e.target) {\n      this.setState({ modalIsOpen: false });\n    }\n  };\n\n  render() {\n    const {images, bigImg, isLoading, modalIsOpen} = this.state\n    return (\n      <div className=\"Container\">\n        <Searchbar onSubmit={this.formSubmitHandle} />\n        {isLoading && <Loader />}\n        <ImageGallery images={images} onClick={this.imgBig} />\n        {images.length > 0 && (\n          <Button text={\"load more\"} onClick={this.fetchImages} />\n        )}\n        {modalIsOpen === true && (\n          <Modal img={bigImg} onClick={this.modalClose} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}